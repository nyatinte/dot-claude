{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(bun run lint)",
      "Bash(bun run test:*)",
      "Bash(bun run build)",
      "Bash(bun run ci)",
      "Bash(bun run format)",
      "Bash(bun run typecheck)",
      "Bash(bun run check)",
      "Bash(rg:*)",
      "Bash(fd:*)",
      "Bash(eza:*)",
      "Read(~/.zshrc)",
      "Bash(afplay:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:uithub.com)",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "mcp__github__list_commits",
      "mcp__github__get_file_contents",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(pwd)",
      "Bash(cd:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(vitest:*)",
      "Bash(jest:*)",
      "Bash(pytest:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:crates.io)"
    ],
    "deny": [
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(rm -rf *)",
      "Bash(rm -rf /)",
      "Bash(rm -rf ~*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(psql:*)",
      "Bash(mysql:*)",
      "Bash(mongod:*)",
      "Bash(redis-cli:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(nc:*)",
      "Bash(telnet:*)",
      "Read(.env)",
      "Read(.env.*)",
      "Read(*.pem)",
      "Read(*.key)",
      "Read(id_rsa*)",
      "Read(id_ed25519*)",
      "Read(*token*)",
      "Read(*secret*)",
      "Read(*password*)",
      "Read(.aws/*)",
      "Read(.ssh/*)",
      "Write(.env)",
      "Write(.env.*)",
      "Write(*.pem)",
      "Write(*.key)",
      "Write(.aws/*)",
      "Write(.ssh/*)"
    ]
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/scripts/claude-notify.sh approval"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/scripts/claude-notify.sh complete"
          }
        ]
      }
    ]
  },
  "model": "opus"
}